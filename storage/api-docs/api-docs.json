{
    "openapi": "3.0.0",
    "info": {
        "title": "Xsolla Marketplace API",
        "description": "This is a markeplace for purchasing and selling game keys.",
        "contact": {
            "url": "https://github.com/InfluxOW",
            "email": "krochak_n@mail.ru"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign In",
                "description": "Login by email and password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMDM2N2RkZTczY2NiYmE2ZjRkYTkxY2VjOWRlODA0NmYzYjNkYTI5MWRlZjM4Mjg1OTliZTY5YzAxOTUyMTIwMGIwYTU1ZGM5NWEyMzM2NmUiLCJpYXQiOjE1OTg1Mjg1NTYsIm5iZiI6MTU5ODUyODU1NiwiZXhwIjoxNjMwMDY0NTU2LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.BfFE40nkUt-Jwr7S8gCvogsCoYsX6VSYvVzuT9czVuGS_VeDFV4W2riQ0SopOeLtsvZttMI8VLgpXDYBYsASsFo4H-zrAmGRYZ2qLi4QNj5cPVJpXqe4xhRQsYbpY4xre7lNfXaYod56Ocek-3psN3A68eTZ2ro_cPde42lkur5eQTx7-TojHeqpK3uywl8IugzvBq3wcfcHLRQZSmEVvkJzYNuLs-03YsMnyod1wk3FszqzqzmZP2hiTXj-HhU1N6WRy6XobGzgoM__bxPRsQoMK3TCphqHIhwO14pJzaFbDqEf3USEMmPrF9rYJrgUjzGUglqRsg78GZsWHNakhH6-q1kibPI-k-VMazKSn85wi6HuXXCwycBXY0PRYpYAGbUrfBkuxK_t21peZ8tb6kD3XEr6XEz3PgEmbaRbnFelQEybjLCGYmWj2yuKOjkSQgNeEdOmpqzUDUiJByjE_ElxRD77prr-OG6e3GwwwOaHYLy6_8MtRP1cTg81BtcEYc8AmFeuceSAEjbDzEzaLSgiAJH9dh3Qy24V5HNnQjXmWvpSAHW1sJcXAYZyPE1bY0h7LBk91UmTJ_mkxa0EDofQsOFMhAQdGrQr2HRdrwfmD_vrHDNL-MeP94XNAihrVg4AXjhTMuZOhuzSxza_DgNO9EACQuzy1f81mfMapGU"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "Register a new user",
                "operationId": "authRegister",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email",
                                    "role",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john_doe@mail.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "buyer",
                                            "seller"
                                        ]
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User has been registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMDM2N2RkZTczY2NiYmE2ZjRkYTkxY2VjOWRlODA0NmYzYjNkYTI5MWRlZjM4Mjg1OTliZTY5YzAxOTUyMTIwMGIwYTU1ZGM5NWEyMzM2NmUiLCJpYXQiOjE1OTg1Mjg1NTYsIm5iZiI6MTU5ODUyODU1NiwiZXhwIjoxNjMwMDY0NTU2LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.BfFE40nkUt-Jwr7S8gCvogsCoYsX6VSYvVzuT9czVuGS_VeDFV4W2riQ0SopOeLtsvZttMI8VLgpXDYBYsASsFo4H-zrAmGRYZ2qLi4QNj5cPVJpXqe4xhRQsYbpY4xre7lNfXaYod56Ocek-3psN3A68eTZ2ro_cPde42lkur5eQTx7-TojHeqpK3uywl8IugzvBq3wcfcHLRQZSmEVvkJzYNuLs-03YsMnyod1wk3FszqzqzmZP2hiTXj-HhU1N6WRy6XobGzgoM__bxPRsQoMK3TCphqHIhwO14pJzaFbDqEf3USEMmPrF9rYJrgUjzGUglqRsg78GZsWHNakhH6-q1kibPI-k-VMazKSn85wi6HuXXCwycBXY0PRYpYAGbUrfBkuxK_t21peZ8tb6kD3XEr6XEz3PgEmbaRbnFelQEybjLCGYmWj2yuKOjkSQgNeEdOmpqzUDUiJByjE_ElxRD77prr-OG6e3GwwwOaHYLy6_8MtRP1cTg81BtcEYc8AmFeuceSAEjbDzEzaLSgiAJH9dh3Qy24V5HNnQjXmWvpSAHW1sJcXAYZyPE1bY0h7LBk91UmTJ_mkxa0EDofQsOFMhAQdGrQr2HRdrwfmD_vrHDNL-MeP94XNAihrVg4AXjhTMuZOhuzSxza_DgNO9EACQuzy1f81mfMapGU"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Registration failed due to validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "The email must be a valid email address."
                                                        ]
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/distributors": {
            "get": {
                "tags": [
                    "Distributors"
                ],
                "summary": "Distributors Index",
                "description": "View all distributors",
                "operationId": "distributorsIndex",
                "responses": {
                    "200": {
                        "description": "Distributors were fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "distributors": {
                                            "properties": {
                                                "0": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DistributorResource"
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object",
                                            "collectionFormat": "multi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/confirm": {
            "post": {
                "tags": [
                    "Fake External Services"
                ],
                "summary": "Billing Provider",
                "description": "Confirm a purchase",
                "operationId": "paymentsConfirm",
                "requestBody": {
                    "description": "Payment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "card"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "$2y$04$1rS6a2vh9ePY.mjg0I1gTeCskbl/jTy65DOTDDY/P6n4yvL3J4LcK"
                                    },
                                    "card": {
                                        "type": "integer",
                                        "example": "4425669844123325"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "You should be authorized to access the endpoint"
                    },
                    "403": {
                        "description": "You don't have permissions to access the endpoint"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/user/{user:username}/sales": {
            "post": {
                "tags": [
                    "Fake External Services"
                ],
                "summary": "User Server",
                "description": "Send information about purchase to the user server. It should not be done manually, because it's done automatically on purchase confirmation or by the scheduled job. This server responses with an error with 50% chance.",
                "operationId": "userSalesStore",
                "parameters": [
                    {
                        "name": "user:username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Message",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Any data to send to the server for testing it."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Key sale has been processed."
                    },
                    "503": {
                        "description": "Whops, something went wrong. Try again later."
                    },
                    "404": {
                        "description": "Specified user has not been found"
                    }
                }
            }
        },
        "/games": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Games Index",
                "description": "View all games",
                "operationId": "gamesIndex",
                "parameters": [
                    {
                        "name": "filter[platform]",
                        "in": "query",
                        "description": "Filter games by platform:slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[distributor]",
                        "in": "query",
                        "description": "Filter games by distributor:slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[available]",
                        "in": "query",
                        "description": "Leave only games that are available for purchase",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filter[available_at]",
                        "in": "query",
                        "description": "Leave only games that are available for purchase at the specified distributor:slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[price_lte]",
                        "in": "query",
                        "description": "Leave only games that costs less or equals to the specified price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter[price_gte]",
                        "in": "query",
                        "description": "Leave only games that costs more or equals to the specified price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort games by one of the available params: price, name or platform. Default sort direction is ASC. To apply DESC sort add '-' symbol before the param name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Results page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Games were fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "games": {
                                            "properties": {
                                                "0": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/GameResource"
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object",
                                            "collectionFormat": "multi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Games Store",
                "description": "Store a new game",
                "operationId": "gamesStore",
                "requestBody": {
                    "description": "Game data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "platform"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "The Witcher 3: Wild Hunt"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The Witcher 3: Wild Hunt is a 2015 action role-playing game developed and published by Polish developer CD Projekt Red and is based on The Witcher series of fantasy novels by Andrzej Sapkowski. It is the sequel to the 2011 game The Witcher 2: Assassins of Kings and the third main installment in the The Witcher's video game series, played in an open world with a third-person perspective."
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": "50"
                                    },
                                    "platform": {
                                        "type": "string",
                                        "example": "PC"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Game has been stored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GameResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Game has not been stored due to validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "Name attribute is required."
                                                        ]
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You should be authorized to access the endpoint"
                    },
                    "403": {
                        "description": "You don't have permissions to access the endpoint"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/games/{game:slug}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Games Show",
                "description": "View specified game",
                "operationId": "gamesShow",
                "parameters": [
                    {
                        "name": "game:slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specified game has been fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GameResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specified game has not been found"
                    }
                }
            }
        },
        "/platforms": {
            "get": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Platforms Index",
                "description": "View all platforms",
                "operationId": "platformsIndex",
                "responses": {
                    "200": {
                        "description": "Platforms were fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "platforms": {
                                            "properties": {
                                                "0": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PlatformResource"
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object",
                                            "collectionFormat": "multi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/games/{game:slug}/{distributor:slug}/purchase": {
            "post": {
                "tags": [
                    "Purchases"
                ],
                "summary": "Payment a key",
                "description": "Payment a key for the specific game at the specific distributor",
                "operationId": "purchaseStore",
                "parameters": [
                    {
                        "name": "game:slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "distributor:slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Keys has been reserved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have successfully reserved a key for the game 'The Witcher 3: Wild Hunt' at Steam. To initialize payment send HTTP POST request with your card credentials and payment session token to the billing provider."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "$2y$04$1rS6a2vh9ePY.mjg0I1gTeCskbl/jTy65DOTDDY/P6n4yvL3J4LcK"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No available keys",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string",
                                        "example": "Selected game has no available keys at the specified distributor."
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You should be authorized to access the endpoint"
                    },
                    "403": {
                        "description": "You don't have permissions to access the endpoint"
                    },
                    "404": {
                        "description": "Specified game or distributor was not been found"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        },
        "/games/{game:slug}/{distributor:slug}/sell": {
            "post": {
                "tags": [
                    "Sales"
                ],
                "summary": "Sell a key or keys",
                "description": "Sell keys for the specific game at the specific distributor",
                "operationId": "keysStore",
                "parameters": [
                    {
                        "name": "game:slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "distributor:slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Keys data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "keys"
                                ],
                                "properties": {
                                    "keys": {
                                        "type": "string[]",
                                        "example": [
                                            "HG5D-SXC2-KNB5-M2K2",
                                            "JSD6-SDXC-664H-9JJ2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Keys has been put on sale",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string",
                                        "example": "You have successfully put up for sale keys for the game The Witcher 3: Wild Hunt at distributor Steam!"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Keys has not been stored due to validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "Keys attribute is required."
                                                        ]
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You should be authorized to access the endpoint"
                    },
                    "403": {
                        "description": "You don't have permissions to access the endpoint"
                    },
                    "404": {
                        "description": "Specified game or distributor were not been found"
                    }
                },
                "security": [
                    {
                        "access_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "DistributorResource": {
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "Steam"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "steam"
                    },
                    "platform": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "PC"
                    },
                    "total_games": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "available_games": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "2"
                    },
                    "link": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "http://localhost:8000/api/games?filter%5Bdistributor%5D=steam"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "DistributorResource"
                }
            },
            "GameResource": {
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "The Witcher 3: Wild Hunt"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "the-witcher-3-wild-hunt"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "The Witcher 3: Wild Hunt is a 2015 action role-playing game developed and published by Polish developer CD Projekt Red and is based on The Witcher series of fantasy novels by Andrzej Sapkowski. It is the sequel to the 2011 game The Witcher 2: Assassins of Kings and the third main installment in the The Witcher's video game series, played in an open world with a third-person perspective."
                    },
                    "platform": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "PC"
                    },
                    "price": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "50"
                    },
                    "link": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "http://localhost:8000/api/games/the-witcher-3-wild-hunt"
                    },
                    "available_keys": {
                        "type": "string[]",
                        "readOnly": "true",
                        "example": {
                            "Uplay": 3,
                            "Steam": 2
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "GameResource"
                }
            },
            "PlatformResource": {
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "PC"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "pc"
                    },
                    "total_games": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "link": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "http://localhost:8000/api/games?filter%5Bplatform%5D=pc"
                    },
                    "distributors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributorResource"
                        },
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PlatformResource"
                }
            },
            "UserResource": {
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "John Doe"
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "john_doe@gmail.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "seller",
                            "buyer"
                        ],
                        "readOnly": "true",
                        "example": "seller"
                    },
                    "balance": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "150"
                    },
                    "keys_on_sale": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "keys_sold": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "keys_purchased": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            }
        },
        "securitySchemes": {
            "access_token": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}